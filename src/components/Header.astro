---
import "../styles/global.css";
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
    {
        title: "Inicio",
        label: "Inicio",
        href: "/",
    },
    {
        title: "Experiencia",
        label: "Experiencia",
        href: "/#experiencia",
    },
    {
        title: "Proyectos",
        label: "Proyectos",
        href: "/#proyectos",
    },
    {
        title: "Contacto",
        label: "Contacto",
        href: "mailto:arielnavas05@gmail.com",
    },
];
---

<header
    class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
    <img
        class="size-10 md:size-12 rounded-full object-cover mr-10"
        src="https://images6.fanpop.com/image/photos/36800000/-Luffy-monkey-d-luffy-36845047-1280-800.jpg"
        alt="Ariel's Img"
    />
    <nav
        class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center"
    >
        {
            navItems.map((item) => (
                <a
                    href={item.href}
                    aria-label={item.label}
                    class="relative block px-2 py-2 transition hover:text-blue-400 dark:hover:text-blue-500"
                >
                    {item.title}
                </a>
            ))
        }
    
    <ThemeToggle/>
    </nav>
</header>

<script>
    document.addEventListener("astro:page-load", () => {
        const sections = document.querySelectorAll("section");
        const navItems = document.querySelectorAll("header nav a");

        const callback = (entries: any[]) => {
            //elementos observados
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    navItems.forEach((item) => {
                        if (
                            item.getAttribute("aria-label") == entry.target.id
                        ) {
                            item.classList.add("text-blue-400");
                        } else {
                            item.classList.remove("text-blue-400");
                        }
                    });
                }
            });
        };

        const observer = new IntersectionObserver(callback, {
            root: null,
            rootMargin: "0px",
            threshold: 0.3,
        });

        sections.forEach((section) => {
            observer.observe(section);
        });

        //clean up function
        document.onvisibilitychange = () => {
            if (document.visibilityState === "hidden") {
                observer.disconnect();
            } else {
                sections.forEach((section) => {
                    observer.observe(section);
                });
            }
        };
    });
</script>

<style>
    nav {
        animation: nav-shadown 1s linear both;
        animation-timeline: scroll();
        animation-range: 0 100px;
    }
    nav {
        background-color: rgba(255, 255, 255, 0.5);
    }

    @media (prefers-color-scheme: dark) {
        nav {
            /* Equivalente a dark:bg-gray-800/90, gray-800 es #1F2937 */
            background-color: rgba(31, 41, 55, 0.9);
        }
    }
    @keyframes nav-shadown {
        0% {
            background-color: rgba(255, 255, 255, 0);
        }
        to {
            background-color: rgba(31, 41, 55, 0.9);
            box-shadow:
                0 10px 15px -3px rgba(0, 0, 0, 0.1),
                0 4px 6px -2px rgba(0, 0, 0, 0.05);
            /* Desenfoque de fondo */
            backdrop-filter: blur(8px);
        }
    }
</style>
